{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gautier\\\\Desktop\\\\lacapsule\\\\semaine6\\\\project\\\\Morning News\\\\part5\\\\reactapp\\\\src\\\\ScreenSource.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { List, Avatar } from 'antd';\nimport Nav from './Nav';\nimport { connect } from 'react-redux';\n\nfunction ScreenSource(props) {\n  const [sourceList, setSourceList] = useState([]);\n  const [selectedLang, setSelectedLang] = useState(props.selectedLang);\n  useEffect(() => {\n    const APIResultsLoading = async () => {\n      const dataBase = await fetch('/language', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `tokenFromFront=${props.token}`\n      });\n      var response = await dataBase.json();\n      console.log('response', reponse);\n      var langue = 'fr';\n      var country = 'fr';\n\n      if (selectedLang == 'en') {\n        var langue = 'en';\n        var country = 'us';\n      }\n\n      props.changeLang(selectedLang);\n      const data = await fetch(`https://newsapi.org/v2/sources?language=${langue}&country=${country}&apiKey=9b113ef4af7b4581abd544e9c761ab74`);\n      const body = await data.json();\n      setSourceList(body.sources);\n    };\n\n    APIResultsLoading();\n  }, [selectedLang]);\n\n  const clickLanguage = async language => {\n    setSelectedLang(language);\n    var langue = language;\n    const dataLanguage = await fetch('/language', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `tokenFromFront=${props.token}&languageFromFront=${langue}`\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      width: '40px',\n      margin: '10px',\n      cursor: 'pointer'\n    },\n    src: \"/images/fr.png\",\n    onClick: () => clickLanguage('fr'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      width: '40px',\n      margin: '10px',\n      cursor: 'pointer'\n    },\n    src: \"/images/uk.png\",\n    onClick: () => clickLanguage('en'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: source => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: `/images/${source.category}.png`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${source.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, source.name),\n      description: source.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedLang: state.selectedLang,\n    token: state.token\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeLang: function (selectedLang) {\n      dispatch({\n        type: 'changeLang',\n        selectedLang: selectedLang\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenSource);","map":{"version":3,"sources":["C:/Users/Gautier/Desktop/lacapsule/semaine6/project/Morning News/part5/reactapp/src/ScreenSource.js"],"names":["React","useState","useEffect","Link","List","Avatar","Nav","connect","ScreenSource","props","sourceList","setSourceList","selectedLang","setSelectedLang","APIResultsLoading","dataBase","fetch","method","headers","body","token","response","json","console","log","reponse","langue","country","changeLang","data","sources","clickLanguage","language","dataLanguage","display","justifyContent","alignItems","width","margin","cursor","source","category","id","name","description","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './App.css';\r\nimport { List, Avatar} from 'antd';\r\nimport Nav from './Nav'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ScreenSource(props) {\r\n\r\n  const [sourceList, setSourceList] = useState([])\r\n  const [selectedLang, setSelectedLang] = useState(props.selectedLang)\r\n\r\n\r\n  useEffect(() => {\r\n    const APIResultsLoading = async() => {\r\n\r\n      const dataBase = await fetch('/language', {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n        body: `tokenFromFront=${props.token}`\r\n      })\r\n      var response = await dataBase.json();\r\n      console.log('response', reponse);\r\n\r\n      var langue = 'fr'\r\n      var country = 'fr'\r\n\r\n      if(selectedLang == 'en'){\r\n        var langue = 'en'\r\n        var country = 'us'\r\n      }\r\n      props.changeLang(selectedLang)\r\n      const data = await fetch(`https://newsapi.org/v2/sources?language=${langue}&country=${country}&apiKey=9b113ef4af7b4581abd544e9c761ab74`)\r\n      const body = await data.json()\r\n      setSourceList(body.sources)\r\n      \r\n    }\r\n\r\n    APIResultsLoading()\r\n  }, [selectedLang])\r\n\r\n  const clickLanguage = async language => {\r\n    setSelectedLang(language)\r\n\r\n    var langue = language\r\n\r\n    const dataLanguage = await fetch('/language', {\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      body: `tokenFromFront=${props.token}&languageFromFront=${langue}`\r\n    })\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Nav/>\r\n       \r\n       <div style={{display:'flex', justifyContent:'center', alignItems:'center'}} className=\"Banner\">\r\n          <img style={{width:'40px', margin:'10px',cursor:'pointer'}} src='/images/fr.png' onClick={() => clickLanguage('fr')} />\r\n          <img style={{width:'40px', margin:'10px',cursor:'pointer'}} src='/images/uk.png' onClick={() => clickLanguage('en')} /> \r\n        </div>\r\n\r\n       <div className=\"HomeThemes\">\r\n          \r\n              <List\r\n                  itemLayout=\"horizontal\"\r\n                  dataSource={sourceList}\r\n                  renderItem={source => (\r\n                    <List.Item>\r\n                      <List.Item.Meta\r\n                        avatar={<Avatar src={`/images/${source.category}.png`} />}\r\n                        title={<Link to={`/screenarticlesbysource/${source.id}`}>{source.name}</Link>}\r\n                        description={source.description}\r\n                      />\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n\r\n\r\n          </div>\r\n                 \r\n      </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    selectedLang: state.selectedLang,\r\n    token: state.token\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    changeLang: function(selectedLang){\r\n      dispatch({type: 'changeLang', selectedLang: selectedLang})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScreenSource)\r\n"]},"metadata":{},"sourceType":"module"}